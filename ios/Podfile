# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats. You can disable it by adding:
# ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release
}

def parse_KV_file(file, separator='=')
  file_abs_path = File.expand_path(file)
  return {} unless File.exist?(file_abs_path)
  File.read(file_abs_path).split("\n").map { |line|
    next if line.strip.empty? || line.strip.start_with?('#')
    key, value = line.split(separator, 2)
    [key.strip, value.strip] if key && value
  }.compact.to_h
end

# This variable is used by Flutter tooling to generate the pods project
flutter_root = File.expand_path('..', __dir__)
load File.join(flutter_root, '.flutter-plugins-dependencies') if File.exist?(File.join(flutter_root, '.flutter-plugins-dependencies'))

target 'Runner' do
  use_frameworks!   # Firebase plugins often need frameworks
  use_modular_headers!

  # Flutter integration
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # Add any other pods here if you need to override versions, e.g.:
  # pod 'Firebase/Analytics'

end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    # keep Flutter build settings
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      # Force minimum deployment target
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
    end
  end
end
